/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { AddressStorage } from "../AddressStorage";

export class AddressStorage__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<AddressStorage> {
    return super.deploy(overrides || {}) as Promise<AddressStorage>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): AddressStorage {
    return super.attach(address) as AddressStorage;
  }
  connect(signer: Signer): AddressStorage__factory {
    return super.connect(signer) as AddressStorage__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AddressStorage {
    return new Contract(address, _abi, signerOrProvider) as AddressStorage;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "c__0xc99a04f0",
        type: "bytes32",
      },
    ],
    name: "c_0xc99a04f0",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "getAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061036f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806321f8a7211461003b57806391f5650614610093575b600080fd5b6100676004803603602081101561005157600080fd5b81019080803590602001909291905050506100c1565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100bf600480360360208110156100a957600080fd5b8101908080359060200190929190505050610315565b005b60006100ef7f8f1f75708d48a5452731ca5bfee216ab17d6d168836484d58fbb87133340b3fb60001b610315565b61011b7f6ab8b4149ccc9a716c9977f34ddacddf7d037c2864d28c2d3eab287e6d9cfef660001b610315565b6101477f771a447d66ef8f01a4c84d1e84bcc8a5c5b6e256480c51fd4565c6453c72dcfa60001b610315565b600080600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506101aa7f0882260362ff814adfa85859a52cb3369a3aed656d26528c8472e1b2aff54cf160001b610315565b6101d67f196a0398df807fc30c94dfd05ebd98a97804f1825efeb18dca792ee14c1e4fdb60001b610315565b6102027fc6b4a6a5cfe1e1a9d7caf619760cddc8777f588b6300814d26f571bdbdf6fc2e60001b610315565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610288576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806103196021913960400191505060405180910390fd5b6102b47f6f5508415689b689c7c5a85ef0d53d6d5e1e8d392de7c042b129ab89ee6f29af60001b610315565b6102e07f40108ff63e628f21dbe50c89838bdcc6824cea00fc69936d31cbbad2b43bc38960001b610315565b61030c7f4c1baabe2c73e6a432c30687c398b507c62a64fec3ef3108413c99c73ea27c8660001b610315565b80915050919050565b5056fe4164647265737353746f726167653a2041646472657373206e6f7420666f756e64a26469706673582212200136cc6ed8700a250f1e179985ddca9e69e6df62cbb6bf91c62404aef516aefd64736f6c634300060c0033";
