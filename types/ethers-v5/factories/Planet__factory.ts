/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, BigNumberish } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { Planet } from "../Planet";

export class Planet__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    addressRepository: string,
    name: string,
    x: BigNumberish,
    y: BigNumberish,
    overrides?: Overrides
  ): Promise<Planet> {
    return super.deploy(
      addressRepository,
      name,
      x,
      y,
      overrides || {}
    ) as Promise<Planet>;
  }
  getDeployTransaction(
    addressRepository: string,
    name: string,
    x: BigNumberish,
    y: BigNumberish,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(
      addressRepository,
      name,
      x,
      y,
      overrides || {}
    );
  }
  attach(address: string): Planet {
    return super.attach(address) as Planet;
  }
  connect(signer: Signer): Planet__factory {
    return super.connect(signer) as Planet__factory;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Planet {
    return new Contract(address, _abi, signerOrProvider) as Planet;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "addressRepository",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint16",
        name: "x",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "y",
        type: "uint16",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "getCoordinates",
    outputs: [
      {
        internalType: "uint16",
        name: "x",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "y",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "resource",
        type: "address",
      },
    ],
    name: "getResourceLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "resource1",
        type: "address",
      },
      {
        internalType: "address",
        name: "resource2",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount1out",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount2out",
        type: "uint256",
      },
    ],
    name: "swap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610a26380380610a268339818101604052608081101561003357600080fd5b81019080805190602001909291908051604051939291908464010000000082111561005d57600080fd5b8382019150602082018581111561007357600080fd5b825186600182028301116401000000008211171561009057600080fd5b8083526020830192505050908051906020019080838360005b838110156100c45780820151818401526020810190506100a9565b50505050905090810190601f1680156100f15780820380516001836020036101000a031916815260200191505b50604052602001805190602001909291908051906020019092919050505083600160046101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f1d75fd56040518163ffffffff1660e01b815260040160206040518083038186803b1580156101b857600080fd5b505afa1580156101cc573d6000803e3d6000fd5b505050506040513d60208110156101e257600080fd5b8101908080519060200190929190505050600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550826000908051906020019061024992919061028d565b5081600160006101000a81548161ffff021916908361ffff16021790555080600160026101000a81548161ffff021916908361ffff1602179055505050505061032a565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106102ce57805160ff19168380011785556102fc565b828001600101855582156102fc579182015b828111156102fb5782518255916020019190600101906102e0565b5b509050610309919061030d565b5090565b5b8082111561032657600081600090555060010161030e565b5090565b6106ed806103396000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806317d7de7c146100515780632df20fef146100d4578063750a49371461012c578063fe02915614610159575b600080fd5b6100596101d1565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561009957808201518184015260208101905061007e565b50505050905090810190601f1680156100c65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610116600480360360208110156100ea57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610273565b6040518082815260200191505060405180910390f35b61013461031e565b604051808361ffff1681526020018261ffff1681526020019250505060405180910390f35b6101cf6004803603608081101561016f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019092919050505061034b565b005b606060008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102695780601f1061023e57610100808354040283529160200191610269565b820191906000526020600020905b81548152906001019060200180831161024c57829003601f168201915b5050505050905090565b60008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156102dc57600080fd5b505afa1580156102f0573d6000803e3d6000fd5b505050506040513d602081101561030657600080fd5b81019080805190602001909291905050509050919050565b600080600160009054906101000a900461ffff16600160029054906101000a900461ffff16915091509091565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ab58430e336040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156103d457600080fd5b505afa1580156103e8573d6000803e3d6000fd5b505050506040513d60208110156103fe57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614801561050c57506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166350fe5ab3336040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156104cf57600080fd5b505afa1580156104e3573d6000803e3d6000fd5b505050506040513d60208110156104f957600080fd5b8101908080519060200190929190505050145b61057e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f416c6c6f776564206f6e6c7920666f72207573657273206f6e20706c616e657481525060200191505060405180910390fd5b6000600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff16639f1d0f593385856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018281526020019350505050600060405180830381600087803b15801561069857600080fd5b505af11580156106ac573d6000803e3d6000fd5b50505050505050505056fea2646970667358221220b244de47e7435a41b0d8beec6c2c5952f9444c00b70b8cd194438b77e1b1418b64736f6c634300060c0033";
