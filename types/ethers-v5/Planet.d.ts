/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface PlanetInterface extends ethers.utils.Interface {
  functions: {
    "addResourcePair(address,address)": FunctionFragment;
    "getCoordinates()": FunctionFragment;
    "getName()": FunctionFragment;
    "getResourceLiquidity(address)": FunctionFragment;
    "getResourcePair(address,address)": FunctionFragment;
    "getResourcePrice(address,address)": FunctionFragment;
    "owner()": FunctionFragment;
    "renounceOwnership()": FunctionFragment;
    "swap(address,address,uint256,uint256)": FunctionFragment;
    "transferOwnership(address)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "addResourcePair",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "getCoordinates",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "getName", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "getResourceLiquidity",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getResourcePair",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "getResourcePrice",
    values: [string, string]
  ): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "renounceOwnership",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "swap",
    values: [string, string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "transferOwnership",
    values: [string]
  ): string;

  decodeFunctionResult(
    functionFragment: "addResourcePair",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getCoordinates",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getName", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getResourceLiquidity",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getResourcePair",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getResourcePrice",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "renounceOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "swap", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership",
    data: BytesLike
  ): Result;

  events: {
    "NewResourcePair(address,address)": EventFragment;
    "OwnershipTransferred(address,address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "NewResourcePair"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "OwnershipTransferred"): EventFragment;
}

export class Planet extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: PlanetInterface;

  functions: {
    addResourcePair(
      resource1: string,
      resource2: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "addResourcePair(address,address)"(
      resource1: string,
      resource2: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    getCoordinates(
      overrides?: CallOverrides
    ): Promise<[number, number] & { x: number; y: number }>;

    "getCoordinates()"(
      overrides?: CallOverrides
    ): Promise<[number, number] & { x: number; y: number }>;

    getName(overrides?: CallOverrides): Promise<[string]>;

    "getName()"(overrides?: CallOverrides): Promise<[string]>;

    getResourceLiquidity(
      resource: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getResourceLiquidity(address)"(
      resource: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getResourcePair(
      resource1: string,
      resource2: string,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "getResourcePair(address,address)"(
      resource1: string,
      resource2: string,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getResourcePrice(
      resource1: string,
      resource2: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getResourcePrice(address,address)"(
      resource1: string,
      resource2: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    owner(overrides?: CallOverrides): Promise<[string]>;

    "owner()"(overrides?: CallOverrides): Promise<[string]>;

    renounceOwnership(overrides?: Overrides): Promise<ContractTransaction>;

    "renounceOwnership()"(overrides?: Overrides): Promise<ContractTransaction>;

    swap(
      resource1: string,
      resource2: string,
      amount1out: BigNumberish,
      amount2out: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "swap(address,address,uint256,uint256)"(
      resource1: string,
      resource2: string,
      amount1out: BigNumberish,
      amount2out: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  addResourcePair(
    resource1: string,
    resource2: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "addResourcePair(address,address)"(
    resource1: string,
    resource2: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  getCoordinates(
    overrides?: CallOverrides
  ): Promise<[number, number] & { x: number; y: number }>;

  "getCoordinates()"(
    overrides?: CallOverrides
  ): Promise<[number, number] & { x: number; y: number }>;

  getName(overrides?: CallOverrides): Promise<string>;

  "getName()"(overrides?: CallOverrides): Promise<string>;

  getResourceLiquidity(
    resource: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getResourceLiquidity(address)"(
    resource: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getResourcePair(
    resource1: string,
    resource2: string,
    overrides?: CallOverrides
  ): Promise<string>;

  "getResourcePair(address,address)"(
    resource1: string,
    resource2: string,
    overrides?: CallOverrides
  ): Promise<string>;

  getResourcePrice(
    resource1: string,
    resource2: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getResourcePrice(address,address)"(
    resource1: string,
    resource2: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  owner(overrides?: CallOverrides): Promise<string>;

  "owner()"(overrides?: CallOverrides): Promise<string>;

  renounceOwnership(overrides?: Overrides): Promise<ContractTransaction>;

  "renounceOwnership()"(overrides?: Overrides): Promise<ContractTransaction>;

  swap(
    resource1: string,
    resource2: string,
    amount1out: BigNumberish,
    amount2out: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "swap(address,address,uint256,uint256)"(
    resource1: string,
    resource2: string,
    amount1out: BigNumberish,
    amount2out: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  transferOwnership(
    newOwner: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "transferOwnership(address)"(
    newOwner: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    addResourcePair(
      resource1: string,
      resource2: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "addResourcePair(address,address)"(
      resource1: string,
      resource2: string,
      overrides?: CallOverrides
    ): Promise<void>;

    getCoordinates(
      overrides?: CallOverrides
    ): Promise<[number, number] & { x: number; y: number }>;

    "getCoordinates()"(
      overrides?: CallOverrides
    ): Promise<[number, number] & { x: number; y: number }>;

    getName(overrides?: CallOverrides): Promise<string>;

    "getName()"(overrides?: CallOverrides): Promise<string>;

    getResourceLiquidity(
      resource: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getResourceLiquidity(address)"(
      resource: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getResourcePair(
      resource1: string,
      resource2: string,
      overrides?: CallOverrides
    ): Promise<string>;

    "getResourcePair(address,address)"(
      resource1: string,
      resource2: string,
      overrides?: CallOverrides
    ): Promise<string>;

    getResourcePrice(
      resource1: string,
      resource2: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getResourcePrice(address,address)"(
      resource1: string,
      resource2: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<string>;

    "owner()"(overrides?: CallOverrides): Promise<string>;

    renounceOwnership(overrides?: CallOverrides): Promise<void>;

    "renounceOwnership()"(overrides?: CallOverrides): Promise<void>;

    swap(
      resource1: string,
      resource2: string,
      amount1out: BigNumberish,
      amount2out: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "swap(address,address,uint256,uint256)"(
      resource1: string,
      resource2: string,
      amount1out: BigNumberish,
      amount2out: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    transferOwnership(
      newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    NewResourcePair(resource1: null, resource2: null): EventFilter;

    OwnershipTransferred(
      previousOwner: string | null,
      newOwner: string | null
    ): EventFilter;
  };

  estimateGas: {
    addResourcePair(
      resource1: string,
      resource2: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "addResourcePair(address,address)"(
      resource1: string,
      resource2: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    getCoordinates(overrides?: CallOverrides): Promise<BigNumber>;

    "getCoordinates()"(overrides?: CallOverrides): Promise<BigNumber>;

    getName(overrides?: CallOverrides): Promise<BigNumber>;

    "getName()"(overrides?: CallOverrides): Promise<BigNumber>;

    getResourceLiquidity(
      resource: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getResourceLiquidity(address)"(
      resource: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getResourcePair(
      resource1: string,
      resource2: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getResourcePair(address,address)"(
      resource1: string,
      resource2: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getResourcePrice(
      resource1: string,
      resource2: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getResourcePrice(address,address)"(
      resource1: string,
      resource2: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;

    "owner()"(overrides?: CallOverrides): Promise<BigNumber>;

    renounceOwnership(overrides?: Overrides): Promise<BigNumber>;

    "renounceOwnership()"(overrides?: Overrides): Promise<BigNumber>;

    swap(
      resource1: string,
      resource2: string,
      amount1out: BigNumberish,
      amount2out: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "swap(address,address,uint256,uint256)"(
      resource1: string,
      resource2: string,
      amount1out: BigNumberish,
      amount2out: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    addResourcePair(
      resource1: string,
      resource2: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "addResourcePair(address,address)"(
      resource1: string,
      resource2: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    getCoordinates(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getCoordinates()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getName(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getName()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getResourceLiquidity(
      resource: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getResourceLiquidity(address)"(
      resource: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getResourcePair(
      resource1: string,
      resource2: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getResourcePair(address,address)"(
      resource1: string,
      resource2: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getResourcePrice(
      resource1: string,
      resource2: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getResourcePrice(address,address)"(
      resource1: string,
      resource2: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "owner()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    renounceOwnership(overrides?: Overrides): Promise<PopulatedTransaction>;

    "renounceOwnership()"(overrides?: Overrides): Promise<PopulatedTransaction>;

    swap(
      resource1: string,
      resource2: string,
      amount1out: BigNumberish,
      amount2out: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "swap(address,address,uint256,uint256)"(
      resource1: string,
      resource2: string,
      amount1out: BigNumberish,
      amount2out: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
